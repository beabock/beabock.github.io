library(readxl) #This is loading the package
#And then I read it in like this:
dataset <- read_excel("C:/Users/beabo/OneDrive/Documents/NAU/Mycology TAing/2023/Endophyte spreadsheet Nov 6 lab B.xlsx", sheet = 2) #The data we're using is on the second sheet, which is why I specify that
View(dataset)
dataset <-
rename(dataset, Lab = `Lab A or B`)#Get rid of that silly name, calling it Lab instead
library(dplyr) #This is a great package, would recommend getting familiar with it
dataset <-
rename(dataset, Lab = `Lab A or B`)#Get rid of that silly name, calling it Lab instead
dataset <- dataset %>%
filter(!is.na(Lab)) #There's a row for averages, and we don't want that, so I'm going to filter out any rows that don't have a lab designation. I see that one student has not inputted their lab designation, so we're just not going to include their data. Not ideal, but this is why it's important to stay on top of data entry :)
library(ggplot2)
theme_set(theme_minimal()) #Setting a theme for all the plots in this document to something I like
ggplot(dataset)+
geom_boxplot(aes(x=Lab, y=`% isolation leaf endophyte -Fungi`))+
labs(title = "title")
ggplot(dataset)+
geom_bar(aes(x=`plant family`)) #See how the column name with the spaces is annoying?
#Same thing, but make it more fun
ggplot(dataset)+
geom_bar(aes(x=`plant family`, fill = `plant family`), show.legend = F) +#You can set show.legend to "T" and see what that does
labs(x = "Plant Family", #Changing the x axis name
title = "I made this great plot") #Changing the title
ggplot(dataset)+
geom_bar(aes(x=`plant family`, fill = Lab))+
labs(title = "I <3 mycology!!")
#And then I read it in like this:
dataset <- read_excel("C:/Users/beabo/OneDrive/Documents/NAU/Mycology TAing/2023/Endophyte spreadsheet Nov 6 lab A.xlsx", sheet = 2) #The data we're using is on the second sheet, which is why I specify that
dataset <-
rename(dataset, Lab = `Lab A or B`)#Get rid of that silly name, calling it Lab instead
dataset <- dataset %>%
filter(!is.na(Lab)) #There's a row for averages, and we don't want that, so I'm going to filter out any rows that don't have a lab designation. I see that one student has not inputted their lab designation, so we're just not going to include their data. Not ideal, but this is why it's important to stay on top of data entry :)
install.packages("ggplot2")
theme_set(theme_minimal()) #Setting a theme for all the plots in this document to something I like
ggplot(dataset)+
geom_boxplot(aes(x=Lab, y=`% isolation leaf endophyte -Fungi`))+
labs(title = "title")
ggplot(dataset)+
geom_bar(aes(x=`plant family`)) #See how the column name with the spaces is annoying?
#Same thing, but make it more fun
ggplot(dataset)+
geom_bar(aes(x=`plant family`, fill = `plant family`), show.legend = F) +#You can set show.legend to "T" and see what that does
labs(x = "Plant Family", #Changing the x axis name
title = "I made this great plot") #Changing the title
ggplot(dataset)+
geom_bar(aes(x=`plant family`, fill = Lab))+
labs(title = "I <3 mycology!!")
#Same thing, but make it more fun
ggplot(dataset)+
geom_bar(aes(x=`plant family`, fill = `plant family`), show.legend = F) +#You can set show.legend to "T" and see what that does
labs(x = "Plant Family", #Changing the x axis name
title = "I made this great plot") #Changing the title
anova(lm(`% isolation leaf endophyte -Fungi` ~ Lab, dataset))
dataset <- pivot_longer(dataset, cols = c("Phosphorus solubilizing (yes or no)", "Lignin degradation (yes or no)", ), names_to = "Assay", values_to = "Assay_Result")
library(tidyr)
dataset <- pivot_longer(dataset, cols = c("Phosphorus solubilizing (yes or no)", "Lignin degradation (yes or no)", ), names_to = "Assay", values_to = "Assay_Result")
dataset <- dataset %>%
mutate(`type of endophyte (leaf or root)` = `type of endophyte selected for isolation (leaf or root)`) #This is just to standardize the column names between the two spreadsheets from the different labs. If you're working from Lab A's spreadsheet, ignore the error that you get or comment out this line of code
ggplot(dataset)+
geom_bar(aes(x=Assay, fill = Assay_Result))+
facet_grid(~`type of endophyte (leaf or root)`)
dataset_fixed <- dataset %>%
mutate(Assay_Result = recode(as.character(Assay_Result), no = "No", yes = "Yes")) %>% #Renaming the silly versions of yes and no
filter(!is.na(Assay_Result)) %>% #Get rid of NAs
rename("Endophyte_Type" = `type of endophyte (leaf or root)`) %>% #This is easier to work with
mutate(Endophyte_Type = recode(as.character(Endophyte_Type), leaf = "Leaf", root = "Root")) %>% #Fixing capitalization again
mutate(Assay = recode(Assay, `Lignin degradation (yes or no)` = "Lignin", `Phosphorus solubilizing (yes or no)` = "Phosphorus")) #This is also less than ideal, so we'll make it better
ggplot(dataset_fixed)+
geom_bar(aes(x=Assay, fill = Assay_Result))+
facet_grid(~Endophyte_Type)+
scale_fill_manual(values = c("Pink", "Dark Green"), name = "Assay Result :)") + #Change the colors and name of the legend
labs(title = "This is the plot that I myself made") #Change the title to something else
